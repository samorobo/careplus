import { NextResponse } from "next/server";
import Groq from "groq-sdk";

const groq = new Groq({ apiKey: process.env.GROQ_API_KEY });

export async function POST(request: Request){
    try{
        //when user send message to the chat this message get called
        //It will handle http post request
        const {message} = await request.json();

        //if there is no meassage available, end a 400 error which means bad request
        if(!message){
            return NextResponse.json(
                {error: "Message content is required"},
                {status: 400}
            );
        }

        const chatCompletion = await groq.chat.completions.create({
            messages: [
                {
                    role: "user",
                    content: message,
                },
            ],
            model: "LLama3-8b-8192",
        });

        //extracting the response generated by the LLama model 
        const responseMessage = 
        chatCompletion.choices[0]?.message?.content || "NO response from LLama.";

        return NextResponse.json({ response: responseMessage });


    } catch(error){
        console.log("Error in chat API",error);
        return NextResponse.json(
            {error: "An error occured while processing your request."},
            {status: 500}
        );
    }
}